generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  EMPLOYEE
}

enum SaleType {
  SALE      // customer buys: stock decreases
  PURCHASE  // you restock: stock increases
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  passwordHash String
  role         Role      @default(EMPLOYEE)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt   // ✅ auto update

  products     Product[]
  sales        Sale[]
}

model Product {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  imageUrl    String?
  price       Decimal   @db.Decimal(10, 2)
  quantity    Int       @default(0) 
  isNew       Boolean   @default(false)
  isTrending  Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt   // ✅ auto update

  createdById Int?
  createdBy   User?     @relation(fields: [createdById], references: [id])

  saleItems   SaleItem[]

  @@index([title])
}

model Sale {
  id          Int       @id @default(autoincrement())
  type        SaleType  @default(SALE)
  total       Decimal   @db.Decimal(10, 2)
  createdAt   DateTime  @default(now())

  createdById Int
  createdBy   User      @relation(fields: [createdById], references: [id])

  items       SaleItem[]
}

model SaleItem {
  id        Int      @id @default(autoincrement())

  saleId    Int
  sale      Sale     @relation(fields: [saleId], references: [id])

  productId Int
  product   Product  @relation(fields: [productId], references: [id])

  quantity  Int
  unitPrice Decimal  @db.Decimal(10, 2) // snapshot of price at txn
}
